package net.agileframes.traces;

import java.rmi.RemoteException;
import net.agileframes.server.ServiceProxy;
import net.agileframes.core.server.Server;
import net.agileframes.core.forces.Actor;
import net.agileframes.core.forces.Actor$NotTrustedException;
import net.agileframes.core.services.Job;
import net.jini.core.lookup.ServiceID;

public class ActorProxy extends ServiceProxy {
  //------------------------ Attributes ----------------
  private Actor actor;
  private ServiceID machineID;
  //------------------------ Constructor ---------------
  public ActorProxy(Actor actor, ServiceID machineID) throws RemoteException {
    super((Server)actor, actor.getName(), actor.getServiceID());
    this.actor = actor;
    this.machineID = machineID;
    this.uploadProxy();
  }
  //------------------------ Methods -------------------
  public Actor.Properties getProperties() throws RemoteException {
    return actor.getProperties();
  }
  public boolean acceptJob(ServiceID basicServerID, Job job) throws NotTrustedException, RemoteException {
    return actor.acceptJob(basicServerID, job);
  }
  public ServiceID getMachineID() throws RemoteException {
    return machineID;
  }

  private MachineProxy machineProxy = null;
  public void setMachineProxy(MachineProxy machineProxy) {this.machineProxy = machineProxy; }
  public MachineProxy getMachineProxy() { return machineProxy; }
}
