// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package net.agileframes.traces;

public final class ActorIB_Stub
    extends java.rmi.server.RemoteStub
    implements net.agileframes.core.traces.Actor, net.agileframes.core.server.Server, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_acceptJob_0;
    private static java.lang.reflect.Method $method_dispose_1;
    private static java.lang.reflect.Method $method_getLoginbaseName_2;
    private static java.lang.reflect.Method $method_getMachine_3;
    private static java.lang.reflect.Method $method_getName_4;
    private static java.lang.reflect.Method $method_getProperties_5;
    private static java.lang.reflect.Method $method_getServiceID_6;
    private static java.lang.reflect.Method $method_getServiceID_7;
    
    static {
	try {
	    $method_acceptJob_0 = net.agileframes.core.traces.Actor.class.getMethod("acceptJob", new java.lang.Class[] {net.jini.core.lookup.ServiceID.class, net.agileframes.core.services.Job.class});
	    $method_dispose_1 = net.agileframes.core.traces.Actor.class.getMethod("dispose", new java.lang.Class[] {});
	    $method_getLoginbaseName_2 = net.agileframes.core.server.Server.class.getMethod("getLoginbaseName", new java.lang.Class[] {});
	    $method_getMachine_3 = net.agileframes.core.traces.Actor.class.getMethod("getMachine", new java.lang.Class[] {});
	    $method_getName_4 = net.agileframes.core.server.Server.class.getMethod("getName", new java.lang.Class[] {});
	    $method_getProperties_5 = net.agileframes.core.traces.Actor.class.getMethod("getProperties", new java.lang.Class[] {});
	    $method_getServiceID_6 = net.agileframes.core.server.Server.class.getMethod("getServiceID", new java.lang.Class[] {});
	    $method_getServiceID_7 = net.agileframes.core.server.Server.class.getMethod("getServiceID", new java.lang.Class[] {long.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public ActorIB_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of acceptJob(ServiceID, Job)
    public boolean acceptJob(net.jini.core.lookup.ServiceID $param_ServiceID_1, net.agileframes.core.services.Job $param_Job_2)
	throws java.rmi.RemoteException, net.agileframes.core.traces.NotTrustedException
    {
	try {
	    Object $result = ref.invoke(this, $method_acceptJob_0, new java.lang.Object[] {$param_ServiceID_1, $param_Job_2}, -6086090398976811155L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (net.agileframes.core.traces.NotTrustedException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of dispose()
    public void dispose()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_dispose_1, null, 1608810790517582623L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getLoginbaseName()
    public java.lang.String getLoginbaseName()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getLoginbaseName_2, null, -142064174142828223L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getMachine()
    public net.agileframes.core.forces.MachineRemote getMachine()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getMachine_3, null, 4013240963088959209L);
	    return ((net.agileframes.core.forces.MachineRemote) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getName()
    public java.lang.String getName()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getName_4, null, 6317137956467216454L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getProperties()
    public net.agileframes.core.traces.Actor.Properties getProperties()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getProperties_5, null, 646903834764046703L);
	    return ((net.agileframes.core.traces.Actor.Properties) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getServiceID()
    public net.jini.core.lookup.ServiceID getServiceID()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getServiceID_6, null, 3551855729045843904L);
	    return ((net.jini.core.lookup.ServiceID) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getServiceID(long)
    public net.jini.core.lookup.ServiceID getServiceID(long $param_long_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getServiceID_7, new java.lang.Object[] {new java.lang.Long($param_long_1)}, 5001282240910113962L);
	    return ((net.jini.core.lookup.ServiceID) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
