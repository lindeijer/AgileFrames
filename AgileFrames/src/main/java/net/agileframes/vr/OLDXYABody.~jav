package net.agileframes.vr;

import net.agileframes.core.vr.*;
import net.agileframes.core.forces.FuSpace;
import net.agileframes.forces.xyaspace.XYASpace;
import net.agileframes.core.vr.Body.StateAndAvatar;

import javax.vecmath.*;
import javax.media.j3d.*;

public abstract class XYABody implements Body {  // I think this class is not necessary, XYAAvatar is.
  private XYASpace state = new XYASpace(0,0,0);
  private Body parent = null;
  private Avatar avatar = null;

  /**
   * Creates a new Body.
   */
  public XYABody() {
  }

  // see interface
  public void addAvatar(Avatar avatar) {
    this.avatar = avatar;
  }

  // see interface
  public void removeAvatar(Avatar avatar) {
    this.avatar = null; //(added by hw)
  }

  /**
   * Set the state of this body..HW-> why this method? No need, why should an avatar be able to set body-state?
   * state the new state that is <b>copied</b> into the internal state
   */
  public void setState(XYASpace state) {
//    state = new XYASpace(state.getX(), state.getY(), state.getAlpha());
  }

  // should be overloaded
  public abstract FuSpace getState();

  // see interface
  public int getGeometryID() {
    return 0;//???why not avatar.getGeometryID()
  }

  // see interface
  public int getAppearanceID() {
    return 0;
  }

  public void setParent(Body parentBody) {
    //not implemented here. See BodyIB
  }

  public StateAndAvatar addChild(Body childBody, FuSpace state) {
    //not implemented here. See BodyIB
    return null;
  }

  public FuSpace removeChild(Body childBody) {
    //not implemented here. See BodyIB
    return null;
  }

}
