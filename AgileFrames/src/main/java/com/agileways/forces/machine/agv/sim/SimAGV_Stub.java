// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package com.agileways.forces.machine.agv.sim;

public final class SimAGV_Stub
    extends java.rmi.server.RemoteStub
    implements com.agileways.forces.machine.agv.AGV, net.agileframes.core.forces.Machine, net.agileframes.core.vr.Body, net.agileframes.core.server.Server, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_acceptMove_0;
    private static java.lang.reflect.Method $method_addAvatar_1;
    private static java.lang.reflect.Method $method_addChild_2;
    private static java.lang.reflect.Method $method_getAppearanceID_3;
    private static java.lang.reflect.Method $method_getControls_4;
    private static java.lang.reflect.Method $method_getGeometryID_5;
    private static java.lang.reflect.Method $method_getLoginbaseName_6;
    private static java.lang.reflect.Method $method_getName_7;
    private static java.lang.reflect.Method $method_getServiceID_8;
    private static java.lang.reflect.Method $method_getServiceID_9;
    private static java.lang.reflect.Method $method_getState_10;
    private static java.lang.reflect.Method $method_getState_11;
    private static java.lang.reflect.Method $method_removeAvatar_12;
    private static java.lang.reflect.Method $method_removeChild_13;
    private static java.lang.reflect.Method $method_setControls_14;
    private static java.lang.reflect.Method $method_setParent_15;
    private static java.lang.reflect.Method $method_setState_16;
    
    static {
	try {
	    $method_acceptMove_0 = net.agileframes.core.forces.Machine.class.getMethod("acceptMove", new java.lang.Class[] {net.jini.core.lookup.ServiceID.class, net.agileframes.core.forces.Trajectory.class, net.agileframes.core.forces.Rule[].class, net.agileframes.core.forces.Constraint[].class});
	    $method_addAvatar_1 = net.agileframes.core.vr.Body.class.getMethod("addAvatar", new java.lang.Class[] {net.agileframes.core.vr.Avatar.class});
	    $method_addChild_2 = net.agileframes.core.vr.Body.class.getMethod("addChild", new java.lang.Class[] {net.agileframes.core.vr.Body.class, net.agileframes.core.forces.State.class});
	    $method_getAppearanceID_3 = net.agileframes.core.vr.Body.class.getMethod("getAppearanceID", new java.lang.Class[] {});
	    $method_getControls_4 = net.agileframes.core.forces.Machine.class.getMethod("getControls", new java.lang.Class[] {net.jini.core.lookup.ServiceID.class});
	    $method_getGeometryID_5 = net.agileframes.core.vr.Body.class.getMethod("getGeometryID", new java.lang.Class[] {});
	    $method_getLoginbaseName_6 = net.agileframes.core.server.Server.class.getMethod("getLoginbaseName", new java.lang.Class[] {});
	    $method_getName_7 = net.agileframes.core.server.Server.class.getMethod("getName", new java.lang.Class[] {});
	    $method_getServiceID_8 = net.agileframes.core.server.Server.class.getMethod("getServiceID", new java.lang.Class[] {});
	    $method_getServiceID_9 = net.agileframes.core.server.Server.class.getMethod("getServiceID", new java.lang.Class[] {long.class});
	    $method_getState_10 = net.agileframes.core.vr.Body.class.getMethod("getState", new java.lang.Class[] {});
	    $method_getState_11 = net.agileframes.core.forces.Machine.class.getMethod("getState", new java.lang.Class[] {net.jini.core.lookup.ServiceID.class});
	    $method_removeAvatar_12 = net.agileframes.core.vr.Body.class.getMethod("removeAvatar", new java.lang.Class[] {net.agileframes.core.vr.Avatar.class});
	    $method_removeChild_13 = net.agileframes.core.vr.Body.class.getMethod("removeChild", new java.lang.Class[] {net.agileframes.core.vr.Body.class});
	    $method_setControls_14 = net.agileframes.core.forces.Machine.class.getMethod("setControls", new java.lang.Class[] {net.jini.core.lookup.ServiceID.class, float[].class});
	    $method_setParent_15 = net.agileframes.core.vr.Body.class.getMethod("setParent", new java.lang.Class[] {net.agileframes.core.vr.Body.class});
	    $method_setState_16 = net.agileframes.core.forces.Machine.class.getMethod("setState", new java.lang.Class[] {net.jini.core.lookup.ServiceID.class, net.agileframes.core.forces.State.class, long.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public SimAGV_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of acceptMove(ServiceID, Trajectory, Rule[], Constraint[])
    public net.agileframes.brief.BooleanBrief acceptMove(net.jini.core.lookup.ServiceID $param_ServiceID_1, net.agileframes.core.forces.Trajectory $param_Trajectory_2, net.agileframes.core.forces.Rule[] $param_arrayOf_Rule_3, net.agileframes.core.forces.Constraint[] $param_arrayOf_Constraint_4)
	throws java.rmi.RemoteException, net.agileframes.core.forces.Machine. NotTrustedException
    {
	try {
	    Object $result = ref.invoke(this, $method_acceptMove_0, new java.lang.Object[] {$param_ServiceID_1, $param_Trajectory_2, $param_arrayOf_Rule_3, $param_arrayOf_Constraint_4}, -1123682877588629462L);
	    return ((net.agileframes.brief.BooleanBrief) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (net.agileframes.core.forces.Machine. NotTrustedException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of addAvatar(Avatar)
    public void addAvatar(net.agileframes.core.vr.Avatar $param_Avatar_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_addAvatar_1, new java.lang.Object[] {$param_Avatar_1}, -4907072512780532291L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of addChild(Body, State)
    public net.agileframes.core.vr.Body.StateAndAvatar addChild(net.agileframes.core.vr.Body $param_Body_1, net.agileframes.core.forces.State $param_State_2)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_addChild_2, new java.lang.Object[] {$param_Body_1, $param_State_2}, 423056897013714625L);
	    return ((net.agileframes.core.vr.Body.StateAndAvatar) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getAppearanceID()
    public int getAppearanceID()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getAppearanceID_3, null, 2031895722217256366L);
	    return ((java.lang.Integer) $result).intValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getControls(ServiceID)
    public float[] getControls(net.jini.core.lookup.ServiceID $param_ServiceID_1)
	throws java.rmi.RemoteException, net.agileframes.core.forces.Machine. NotTrustedException
    {
	try {
	    Object $result = ref.invoke(this, $method_getControls_4, new java.lang.Object[] {$param_ServiceID_1}, -3394415289824667079L);
	    return ((float[]) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (net.agileframes.core.forces.Machine. NotTrustedException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getGeometryID()
    public int getGeometryID()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getGeometryID_5, null, -2992955080338120193L);
	    return ((java.lang.Integer) $result).intValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getLoginbaseName()
    public java.lang.String getLoginbaseName()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getLoginbaseName_6, null, -142064174142828223L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getName()
    public java.lang.String getName()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getName_7, null, 6317137956467216454L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getServiceID()
    public net.jini.core.lookup.ServiceID getServiceID()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getServiceID_8, null, 3551855729045843904L);
	    return ((net.jini.core.lookup.ServiceID) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getServiceID(long)
    public net.jini.core.lookup.ServiceID getServiceID(long $param_long_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getServiceID_9, new java.lang.Object[] {new java.lang.Long($param_long_1)}, 5001282240910113962L);
	    return ((net.jini.core.lookup.ServiceID) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getState()
    public net.agileframes.core.forces.State getState()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getState_10, null, -4009361072380954459L);
	    return ((net.agileframes.core.forces.State) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getState(ServiceID)
    public net.agileframes.core.forces.State getState(net.jini.core.lookup.ServiceID $param_ServiceID_1)
	throws java.rmi.RemoteException, net.agileframes.core.forces.Machine. NotTrustedException
    {
	try {
	    Object $result = ref.invoke(this, $method_getState_11, new java.lang.Object[] {$param_ServiceID_1}, -4086968193877328387L);
	    return ((net.agileframes.core.forces.State) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (net.agileframes.core.forces.Machine. NotTrustedException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of removeAvatar(Avatar)
    public void removeAvatar(net.agileframes.core.vr.Avatar $param_Avatar_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_removeAvatar_12, new java.lang.Object[] {$param_Avatar_1}, 414867010957029475L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of removeChild(Body)
    public net.agileframes.core.forces.State removeChild(net.agileframes.core.vr.Body $param_Body_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_removeChild_13, new java.lang.Object[] {$param_Body_1}, -7447684580410972083L);
	    return ((net.agileframes.core.forces.State) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setControls(ServiceID, float[])
    public void setControls(net.jini.core.lookup.ServiceID $param_ServiceID_1, float[] $param_arrayOf_float_2)
	throws java.rmi.RemoteException, net.agileframes.core.forces.Machine. NotTrustedException
    {
	try {
	    ref.invoke(this, $method_setControls_14, new java.lang.Object[] {$param_ServiceID_1, $param_arrayOf_float_2}, 220620812385151657L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (net.agileframes.core.forces.Machine. NotTrustedException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setParent(Body)
    public void setParent(net.agileframes.core.vr.Body $param_Body_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_setParent_15, new java.lang.Object[] {$param_Body_1}, 3985422182839816306L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setState(ServiceID, State, long)
    public void setState(net.jini.core.lookup.ServiceID $param_ServiceID_1, net.agileframes.core.forces.State $param_State_2, long $param_long_3)
	throws java.rmi.RemoteException, net.agileframes.core.forces.Machine. NotTrustedException
    {
	try {
	    ref.invoke(this, $method_setState_16, new java.lang.Object[] {$param_ServiceID_1, $param_State_2, new java.lang.Long($param_long_3)}, 2410902789298256360L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (net.agileframes.core.forces.Machine. NotTrustedException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
